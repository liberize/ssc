#!/bin/sh

while [ -n "$1" ]; do
  case "$1" in
    -u|--untraceable) CXXFLAGS="$CXXFLAGS -DUNTRACEABLE";;
    -s|--static)      CXXFLAGS="$CXXFLAGS -static -static-libgcc -static-libstdc++";;
    -v|--verbose)     set -x; CXXFLAGS="$CXXFLAGS -v";;
    -h|--help)        SHOW_USAGE=1;;
    -*|--*)           echo "Unknown option $1"; exit 1;;
    *)                POSITIONAL_ARGS="$POSITIONAL_ARGS \"$1\"";;
  esac
  shift
done
eval set -- $POSITIONAL_ARGS
if [ -n "$SHOW_USAGE" -o  $# != 2 ]; then
    echo "Usage: $0 [-u] [-s] <script> <binary>"
    echo "  -u, --untraceable   make untraceable binary"
    echo "  -s, --static        make static binary, more portable but bigger"
    echo "  -v, --verbose       show debug messages"
    echo "  -h, --help          display this help and exit"
    exit 0
fi

DIR="$(dirname "$0")"

# Attempt to escape special character in input file name
target_file=$(sed -r 's/[]\/$*_.^[]/\\&/g' <<< "$1")

# generate c++ source code with script code
perl -pe "s/SCRIPT_FILE_NAME/$target_file/g; s/SCRIPT_CONTENT/\`cat '$target_file'\`/ge" "$DIR/main.cpp" >"$1.cpp" || exit 1

# compile c++ source code to binary
CXX="g++ -fconstexpr-loop-limit=1073741824 -fconstexpr-ops-limit=1073741824"
if g++ -v 2>&1 | grep clang >/dev/null 2>&1; then
  CXX="clang++ -fconstexpr-depth=1073741824 -fconstexpr-steps=1073741824"
fi
$CXX -I"$DIR" $CXXFLAGS -std=c++14 "$1.cpp" -o "$2" || exit 1
strip "$2"

# cleanup
rm -f "$1.cpp"
